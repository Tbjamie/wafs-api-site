/* COMMENTS: REVIEWED BY MIKE. USER TESTED & USER APPROVED */

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  /* COLORS */
  --black: #0a0a0a;
  --black-50: #0a0a0a44;
  --white: #f8f8f8;
  --purple: #4000a7;
  --red: #fe4c4c;
  --green: #63ea63;

  /* SPACING */
  --fluid-padding-main: clamp(2rem, -0.5485rem + 10.8738vw, 12.5rem);
}

::selection {
  background-color: var(--purple);
  color: var(--white);
}

html {
  scroll-behavior: smooth;
  background-color: var(--black);
  cursor: none;
}

:hover,
:active,
:focus {
  cursor: none;
}

:focus {
  outline: none;
}

body:has(svg[class="fav-button"]:hover) {
  &:hover,
  &:active,
  &:focus {
    cursor: pointer;
  }

  & html {
    cursor: pointer;
  }
}

.dot-cursor {
  border-radius: 9999px;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: var(--white);
  width: 2rem;
  height: 2rem;
  mix-blend-mode: exclusion;
  position: fixed;
  z-index: 9999;
  pointer-events: none;
  color: white;

  transition: scale 300ms;
  overflow: hidden;

  body:has(a:hover) & {
    scale: 3;
    background-color: var(--purple);
    animation: idleHoverAnimation;
    animation-duration: 300ms;
    animation-fill-mode: forwards;
    animation-delay: 4s;
    mix-blend-mode: normal;
  }

  body:has(a:active) & {
    scale: 2;
  }

  body:has(svg[class="fav-button"]:hover) &,
  body:has(svg[class="fav-button favorite"]:hover) & {
    scale: 0.5;
    background-color: var(--purple);
    animation: none;
    mix-blend-mode: normal;

    & svg {
      display: none;
    }
  }

  body:has(svg[class="fav-button"]:active) &,
  body:has(svg[class="fav-button favorite"]:active) & {
    scale: 0.3;
    background-color: var(--purple);
    animation: none;
    mix-blend-mode: normal;

    & svg {
      display: none;
    }
  }

  body:has(select:hover) & {
    scale: 0.5;
    background-color: var(--purple);
    animation: idleHoverAnimation;
    animation-duration: 300ms;
    animation-fill-mode: forwards;
    animation-delay: 4s;
    mix-blend-mode: normal;

    & svg {
      display: none;
    }
  }

  body:has(button:hover) & {
    scale: 3;
    background-color: var(--purple);
    animation: idleHoverAnimation;
    animation-duration: 300ms;
    animation-fill-mode: forwards;
    animation-delay: 4s;
    mix-blend-mode: normal;
  }
}

@keyframes idleHoverAnimation {
  to {
    scale: 20;
    mix-blend-mode: exclusion;
    color: transparent;
    background-image: radial-gradient(var(--white) 0.1px, var(--purple) 0);
  }
}

.dot-cursor svg {
  width: 25%;
  height: auto;
  fill: currentColor;
  stroke-width: 1px;
  transform: translate(-200%, 200%) rotate(-45deg);
  transition: transform 300ms;
  transition-delay: 200ms;

  body:has(a:hover) & {
    transform: translate(0%, 0%) rotate(-45deg);
  }

  body:has(button:hover) & {
    transform: translate(0%, 0%) rotate(0deg);
  }
}

.loading {
  width: 100vw;
  height: 100vh;
  background-color: var(--purple);
  overflow: hidden;
  z-index: 8888;
  position: fixed;
  top: 0;
  left: 0;
  transition: 500ms ease;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  transition: 500ms ease-in;
}

.loading-animation {
  width: 2rem;
  height: 2rem;
  background-color: var(--black);
  border-radius: 9999px;
  transition: 300ms ease;
}

@media (prefers-reduced-motion: reduce) {
  .loading-animation.animate {
    animation: none;
  }
}

.loading-animation.animate {
  animation: loadingAnimation 0.5s infinite alternate;
}

.loading-animation.animate:nth-of-type(2) {
  animation-delay: 200ms;
}

.loading-animation.animate:last-of-type {
  animation-delay: 400ms;
}

@keyframes loadingAnimation {
  to {
    transform: translateY(-1rem);
    background-color: var(--purple);
  }
}

header {
  width: 100vw;
  height: 15vh;
  position: absolute;
  padding-left: var(--fluid-padding-main);
  padding-right: var(--fluid-padding-main);
  top: 0;
  left: 0;
  & nav {
    width: 100%;
    height: 100%;
    & ul {
      display: flex;
      gap: 4rem;
      list-style: none;
      width: 100%;
      height: 100%;
      justify-content: flex-end;
      align-items: center;
      background-color: transparent;

      & a {
        text-decoration: none;
        color: var(--white);
        position: relative;
        z-index: 1;

        &::after {
          transition: 500ms;
        }

        &:hover,
        &:focus {
          &::after {
            top: 80%;
            background-color: var(--green);
          }
        }
      }
    }
  }
}

.active-page {
  font-weight: bold;

  &::after {
    content: "";
    width: 100%;
    height: 2px;
    background-color: var(--white);
    position: absolute;
    top: -10px;
    left: 0;
    border-radius: 9999px;
    z-index: -1;
  }
}

body {
  font-family: "Montserrat", sans-serif;
  color: var(--white);
  overflow-x: hidden;
  cursor: none;
  background-image: linear-gradient(180deg, var(--black), var(--purple));
}

/* Styling of the hero section */

#home section:first-of-type {
  height: 100vh;
  overflow-x: hidden;
  overflow: hidden;
}

.glow {
  width: 20rem;
  height: 20rem;
  background-color: var(--purple);
  position: absolute;
  border-radius: 9999px;
  filter: blur(200px);
  pointer-events: none;
}

/* #result is the wrapper for the template where the data from the api is displayed, currently in the first section (section > div) */

#result {
  z-index: 10;
  display: flex;
  width: 100vw;
  height: 100vh;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  gap: 4rem;
}

#result h1 {
  font-size: 4rem;
  text-transform: uppercase;
  text-align: center;
}

#result a {
  padding: 1rem 3rem;
  background-color: var(--white);
  color: var(--black);
  text-decoration: none;
  border-radius: 9999px;
}

#result a:active {
  background-color: var(--purple);
  color: var(--white);
}

@keyframes marquee {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-100%);
  }
}

.dot-cursor {
  border-radius: 9999px;
  background-color: var(--white);
  width: 2rem;
  height: 2rem;
  mix-blend-mode: exclusion;
  position: fixed;
  z-index: 9999;
}

/* This is the template where data is displayed using liquidjs */

template div h3 {
  text-transform: uppercase;
  font-weight: bold;
  height: fit-content;
}

/* this is the styling for the parallax section */

#home section:nth-of-type(2) {
  height: 300vh;
  width: 100vw;
  padding-left: var(--fluid-padding-main);
  padding-right: var(--fluid-padding-main);
  position: relative;
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  grid-template-rows: repeat(8, 1fr);
}

#home section:nth-of-type(2) h2 {
  grid-column: 1 / -1;
  font-size: clamp(3rem, 1.6994rem + 5.5491vw, 6rem);
  position: sticky;
  top: calc(50% - 6rem);
  text-align: center;
  text-transform: uppercase;
  mix-blend-mode: exclusion;
  color: var(--white);
  z-index: 1;
}

#home section:nth-of-type(2) a {
  width: 100%;
  height: 100%;
  overflow: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
}

#home section:nth-of-type(2) a img {
  width: 150%;
  height: 150%;
  object-fit: cover;
}

/* hides video on large screens (using media query to show on large screens) */

#home section:nth-of-type(2) a video {
  width: 150%;
  height: 150%;
  object-fit: cover;
  display: none;
}

#home section:nth-of-type(2) a:first-of-type {
  grid-column: span 3;
  grid-row: 3 / 4;
}

#home section:nth-of-type(2) a:nth-of-type(2) {
  grid-column: 5 / -1;
  grid-row: 5 / 6;
  z-index: 2;
}

#home section:nth-of-type(2) a:last-of-type {
  grid-column: 3 / 6;
  grid-row: 6 / 7;
}

/* this is the styling for the text fill animation section */

.text-section {
  padding-left: var(--fluid-padding-main);
  padding-right: var(--fluid-padding-main);
  padding-bottom: 10rem;
}

.text-section h3 {
  font-size: 6rem;
  -webkit-text-stroke: var(--white) 1px;
  position: relative;
  overflow: hidden;
  font-size: clamp(2.5rem, 0.9827rem + 6.474vw, 6rem);
  color: var(--white);
}

/* this is the styling for the section where the inset animation takes place */

.work-section {
  width: 100vw;
  height: calc(var(--slide-amount) * 100lvh);
}

/* this is the container for the articles to get position sticky, necessary to achieve the effect */

.sticky-track {
  position: sticky;
  width: 100%;
  height: 100lvh;
  top: 0;
}

.work-section article {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  background-color: greenyellow;
  display: flex;
  flex-direction: column;
  align-items: space-between;
  justify-content: flex-end;
  padding-bottom: var(--fluid-padding-main);
  padding-left: var(--fluid-padding-main);
  padding-right: var(--fluid-padding-main);
  z-index: 3;
  clip-path: inset(0);
}

.work-section article:nth-of-type(2) {
  background-color: var(--white);
  z-index: 2;
}

.work-section article:last-of-type {
  background-color: var(--black);
  z-index: 1;
}

.work-section article img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -2;
  object-fit: cover;
}

.work-section article div {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #0a0a0a;
  z-index: -1;
  opacity: 0.3;
}

.work-section article h3 {
  font-size: clamp(2rem, 2.071vw + 1.515rem, 4rem);
  margin-bottom: 1rem;
}

.work-section article p {
  color: #f8f8f8;
}

/* this is the styling for the final section (including form and image styling) */

#home section:last-of-type {
  padding-top: 10rem;
  padding-bottom: 10rem;
  height: 150vh;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column-reverse;
  padding-left: var(--fluid-padding-main);
  padding-right: var(--fluid-padding-main);
}

#home section:last-of-type form {
  background-color: var(--black);
  width: 100%;
  height: 100%;
  border-radius: 0 0 20px 20px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 1.75rem;
  padding: 3rem var(--fluid-padding-main);
  transform: scaleY(1);
  transform-origin: bottom;
}

section:last-of-type form h2 {
  color: var(--white);
  margin-bottom: 1rem;
}

section:last-of-type form label {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

section:last-of-type form label input {
  border-radius: 9999px;
  border: none;
  padding: 0.5rem 1rem;
  background-color: rgba(255, 255, 255, 0.2);
  color: var(--white);
  transition: 300ms;
}

section:last-of-type form label input#name {
  text-transform: capitalize;
}

section:last-of-type form label input:focus-visible {
  outline: none;
}

/* styling for valid and invalid input fields */

section:last-of-type form label input:user-invalid {
  border: solid 1px var(--red);
}

section:last-of-type form label input:user-valid {
  border: solid 1px var(--green);
}

section:last-of-type form label textarea {
  height: 20vh;
  border: none;
  border-radius: 10px;
  padding: 0.5rem 1rem;
  background-color: rgba(255, 255, 255, 0.2);
  resize: none;
  color: var(--white);
  transition: 300ms;
}

section:last-of-type form label textarea:focus-visible {
  outline: none;
}

/* styling for valid and invalid textarea field */

section:last-of-type form label textarea:user-invalid {
  border: solid 1px var(--red);
}

section:last-of-type form label textarea:user-valid {
  border: solid 1px var(--green);
}

section:last-of-type form button {
  background-color: var(--white);
  color: var(--black);
  border: none;
  border-radius: 9999px;
  padding: 0.5rem 2rem;
  transition: 200ms;
  margin-top: 1rem;
}

section:last-of-type form button:hover,
section:last-of-type form button:focus-visible {
  background-color: var(--purple);
  color: #f8f8f8;
}

section:last-of-type form button:active {
  background-color: var(--purple);
  opacity: 0.6;
  color: #f8f8f8;
}

/* styling for the button if the form is invalid */

section:last-of-type form:invalid {
  button {
    background: rgb(148, 148, 148);
    color: rgb(195, 195, 195);
  }
}

section:last-of-type div {
  width: 100%;
  height: 50%;
  overflow: hidden;
  border-radius: 20px 20px 0 0;
}

section:last-of-type div img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* Weekly nerd page styling */

#weekly-nerd {
  padding-top: 20vh;
  padding-bottom: 10vh;

  & main {
    min-height: 85vh;
  }

  & main > div {
    padding-left: var(--fluid-padding-main);
    padding-right: var(--fluid-padding-main);
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;

    & select {
      appearance: base-select;
      padding: 0.25rem 1.5rem;
      display: flex;
      justify-content: space-evenly;
      align-items: center;
      gap: 1.5rem;
      transition: 300ms;

      &:focus {
        background-color: rgba(255, 255, 255, 0.2);
      }
    }
  }
  & section {
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    gap: 2rem;
    container-type: inline-size;
    padding-left: var(--fluid-padding-main);
    padding-right: var(--fluid-padding-main);

    @media screen and (min-width: 768px) {
      grid-template-columns: repeat(2, 1fr);
    }

    @media screen and (min-width: 1920px) {
      grid-template-columns: repeat(3, 1fr);
    }

    @media screen and (min-width: 2560px) {
      grid-template-columns: repeat(4, 1fr);
    }

    & .card {
      background-color: red;
      border-radius: 6px;
      width: 100%;
      height: 25vh;

      position: relative;
      overflow: hidden;

      &:hover,
      &:focus-within {
        & a {
          & img {
            scale: 1.5;
          }
        }
      }

      & p {
        font-size: 0.875rem;
        margin-top: 0.125rem;
      }

      & a {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        padding: 2rem 1.5rem;
        text-decoration: none;
        color: var(--white);

        &::after {
          content: "";
          width: 100%;
          height: 100%;
          position: absolute;
          top: 0;
          left: 0;
          background-color: var(--black-50);
        }

        & img {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          object-fit: cover;
          transition: 300ms;
        }

        & > div {
          position: relative;
          width: 100%;
          height: 100%;
          display: flex;
          justify-content: space-between;
          align-items: flex-end;
          z-index: 1;

          & div {
            display: flex;
            flex-direction: column;
            justify-content: flex-end;
          }
        }

        & svg {
          fill: transparent;
          width: 1.75rem;
          height: 1.75rem;
          stroke-width: 20px;
          stroke: var(--white);
          transition: 300ms;

          &:hover,
          &:focus-visible {
            fill: rgba(255, 255, 255, 0.4);
          }

          &:active {
            fill: var(--white);
          }
        }
      }
    }

    & .back-button {
      width: 2rem;
      height: 2rem;
      background: transparent;
      border: none;
      position: absolute;
      top: 7vh;

      left: var(--fluid-padding-main);
      & svg {
        width: 100%;
        height: 100%;
        fill: var(--white);

        transition: 300ms;
      }
    }

    & .back-button-text {
      opacity: 0;
      position: absolute;
    }

    & .detail-heading {
      margin-top: 2rem;
    }

    & .detail-content {
      margin-top: 1rem;
    }

    & .detail-article {
      width: 100%;
      height: 50vh;
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
      gap: 2rem;

      &:hover,
      &:focus-within {
        & a {
          pointer-events: none;

          & img {
            scale: 1;
          }
        }
      }
    }

    & .card.favorite {
      & a {
        & svg {
          fill: var(--red);
          stroke: var(--red);
        }
      }
    }
  }
}

#goals {
  min-height: 100vh;

  & main {
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    gap: 1rem;

    @media screen and (min-width: 768px) {
      grid-template-columns: repeat(2, 1fr);
    }

    @media screen and (min-width: 1024px) {
      grid-template-columns: repeat(3, 1fr);
      grid-template-rows: repeat(3, 1fr);
    }

    padding: 20vh var(--fluid-padding-main) 5rem var(--fluid-padding-main);

    & h1 {
      position: absolute;
      text-align: center;
      align-self: center;
      opacity: 0;
    }
  }

  & .goal-card {
    background: linear-gradient(145deg, var(--white), var(--purple));
    width: 100%;
    color: var(--black);
    border-radius: 5px;
    padding: 1rem 2rem;
    height: max-content;

    @media screen and (min-width: 1024px) {
      animation: goal-card-down 5s cubic-bezier(0.912, -0.003, 0.34, 1) forwards
        infinite alternate;

      &:hover,
      &:focus-visible {
        animation-play-state: paused;
      }
    }

    & h2 {
      margin-bottom: 0.5rem;
    }

    & p {
      font-size: 0.875rem;
      margin-bottom: 0.5rem;
    }

    &:nth-of-type(2) {
      @media screen and (min-width: 1024px) {
        grid-column: 2 / 3;
        grid-row: 3 / 4;
        animation: goal-card-up 5s cubic-bezier(0.912, -0.003, 0.34, 1) forwards
          infinite alternate;

        &:hover,
        &:focus-visible {
          animation-play-state: paused;
        }
      }
    }

    &:last-of-type {
      @media screen and (min-width: 1024px) {
        grid-column: 3 / 4;
        grid-row: 1 / 2;
      }
    }
  }
}

@keyframes goal-card-down {
  0% {
    transform: translateY(0%);
  }

  100% {
    transform: translateY(200%);
  }
}

@keyframes goal-card-up {
  0% {
    transform: translateY(0%);
  }

  100% {
    transform: translateY(-200%);
  }
}

/* this is the media query for light mode (default styling is dark mode) */

@media (prefers-color-scheme: light) {
  :root {
    --black: #f8f8f8;
    --white: #0a0a0a;
    --black-50: #f8f8f844;
    --purple: #a872ff;
    --red: #e32a2a;
    --green: #2dca2d;
  }

  .dot-cursor {
    mix-blend-mode: overlay;
  }

  #home section:nth-of-type(2) h2 {
    color: var(--white);
    mix-blend-mode: overlay;
  }

  #home .work-section article h3 {
    color: var(--black);
  }

  #home section:last-of-type form label input {
    background-color: rgba(0, 0, 0, 0.1);
  }

  #home section:last-of-type form label textarea {
    background-color: rgba(0, 0, 0, 0.1);
  }

  #home section:last-of-type form button {
    color: #f8f8f8;
  }
}

/* this is the media query to make the website repsonsive, I put the breakpoint at 1024px */

@media screen and (min-width: 1024px) {
  /* hiding the image to replace it with a video */

  #home section:nth-of-type(2) a .parallax-somie-logo {
    display: none;
  }

  /* displaying the video instead of the image above */

  #home section:nth-of-type(2) a video {
    display: block;
  }

  #home .work-section article p {
    max-width: 60%;
  }

  /* putting the form and div in the last section next to eachother instead of top and bottom */

  #home section:last-of-type {
    flex-direction: row;
    height: 125vh;
  }

  #home section:last-of-type form {
    border-radius: 20px 0 0 20px;
    width: 50%;
    padding: 0 var(--fluid-padding-main);
  }

  #home section:last-of-type div {
    border-radius: 0 20px 20px 0;
    width: 50%;
    height: 100%;
  }
}

/* this is the media query to make the website repsonsive, I put the breakpoint at 1920px */

@media screen and (min-width: 1920px) {
  #home section:last-of-type {
    height: 100vh;
  }
}

/* this is the media query to make the website repsonsive, I put the breakpoint at 2560px */

@media screen and (min-width: 2560px) {
  #home .glow {
    width: 30rem;
    height: 30rem;
    filter: blur(350px);
  }

  #home #result {
    gap: 8rem;
  }

  #home #result h1 {
    font-size: 6rem;
  }

  #home #result a {
    padding: 1rem 3rem;
    font-size: 1.25rem;
  }

  #home .text-section h3 {
    padding-left: var(--fluid-padding-main);
    padding-right: var(--fluid-padding-main);
  }

  #home section:last-of-type {
    margin-left: var(--fluid-padding-main);
    margin-right: var(--fluid-padding-main);
  }

  #home section:last-of-type h2 {
    font-size: 3rem;
  }

  #home section:last-of-type form label input {
    padding: 1rem 1.5rem;
  }

  #home section:last-of-type form button {
    padding: 1rem 2.5rem;
  }
}

/* ::picker-icon {
  display: none;
} */
